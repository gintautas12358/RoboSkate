%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 719.000000 372.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.16 (Build 20F71) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 719 372
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 719 372
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /O put
dup 34 /b put
dup 35 /s put
dup 36 /e put
dup 37 /r put
dup 38 /v put
dup 39 /a put
dup 40 /t put
dup 41 /i put
dup 42 /o put
dup 43 /n put
dup 44 /four put
dup 45 /zero put
dup 46 /R put
dup 47 /L put
dup 48 /U put
dup 49 /three put
dup 50 /H put
dup 51 /d put
dup 52 /h put
dup 53 /one put
dup 54 /five put
dup 55 /space put
dup 56 /A put
dup 57 /c put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/three 4 def
/four 5 def
/five 6 def
/A 7 def
/H 8 def
/L 9 def
/O 10 def
/R 11 def
/U 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/h 18 def
/i 19 def
/n 20 def
/o 21 def
/r 22 def
/s 23 def
/t 24 def
/v 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E4F2B7E4857BF54BFC4169B6E3076DA51F266F2CFA07F908C9D98E8A354FCA7501980D9EB4BFD2DBA9D3CA77C7ACDA9286FCF689FAB5269340A281B29EF54F0FA14FC22E3661D5FFDAA79A46F05583DC24F87E3639B83AB786FC2063456B41D61C43BB7273F38C015483F93F9B36D7B208B5538D210C40D772DC8D85947BB36FC3654BE877F3D557E6F205DF02C984399FA8D070968011D2FF1E2E3155F9DFC84721BD8F9210BF923C1D3F6732644CC1F4CB2E1A66820ED48465B177A940BDC48D449FE242F64CA770807E2C56CEBD200F9298BC402EE374789A4C468ECB6CE0C48C0B56D65D9699EA8894D8CC6685A54D952D7526F1AD4C87B8FDBA6AEFDC3594B355AF5168662F28834DD1DA52E622F0C94E9D58A33FFBF0B09359A9A094FA31A1FACE72C0B8B43541AF029006FE5229B460E037064D6729E314753B44D0948B4A3DF5163E29CA40168DB1736551A59898219CA3F3D19F303E3459F9FDD5127FA646BF43E380FDBC328878638F4828D981C355FB1E87B287106E18C6BABC51520E443A0CDCD104C6DB0E9110EAE4A342B6C98DDEEBC241E5718CC43B0D9495082F0323FB7520B2FEBB573076B15084BE46ED5496C428207208C50EFFE30C10D046DC9DE745962EA07C4F9B5F16D11D3361AC66CA84A0E6AC996D36A645B83921C7C0C8FD8A6DFFB83A42F9EAFCF3B57DCFEB87A6DE30106A38DC9C25CE140144D8B682770892E493F87902CA46699BFAE4C23FF2CBB1CEB9750B26902A055F3E1C0B
48576836D3AEA7FF66D28260C78E53E265BF606B1F122580526C57A0D53BA8988FC5DE296E95D0883385E12888B227F372F5655E73016F50A3499E6C99A16FCE8E2C600B44F6FB15FBC8D7CC9C4CB2932BF3B3F4BCA223F382638CC949E6F78BC29C7E8876B65760F544618ECD71D337DC28FAFC5B71534B62E46538CF03AEB85C7FEB864F15721370D5062143ECF9428862FCABBA5736C3AA6D3586A2C1AA1A938EECDDE733F0C9A48FC5C734B710C89ECE2B2EB2BFE474754E10EA6970C10C38A80CA1C205FC19A85AC6509B8E01FACD8A4E5843621BD5B2E7764C123926A3AF39644D48B50F1BC4E199246E2FC463F211B801333CB7E5035E871C8EAF7A0BE413D488FEF719FE539833A946008C8217C2287F4B786363ADDA9629C3B3B3139060D5AC59D18F20E1313DEF6994E281E39E00C492063AC6DB49B9603982BF4CD0E4444C018C51DC03B40FD639771B4A45995392BED1F0875B1ED605726089CB2527EB325385CCCF9CEC77D6E8D29376DE0CA6887DB9490D2ED49E594433ECEBC05FD35D1371AE5E24DB5475793F7408D78ECED9E4DC19C193F35C93EB29AB49D6792D8C49B1811B303563BE2C6B942853E876952E69F11DB1E917744FA854E2C042D84AD2765AD0D5FD7E2E5E05D731F0E7E8BF073F25DC9D123BBA7F83E94A8031932226DA0D2890F9D299201693731532A7B4D01F2AF798EB8F6606CBD18B8870B56CCE6D802F0B483BD4BAF089D5D1ACCF5AA04CA8A348267D3AB8D452DF9976FAD881C074C2A5BD7C3F33A42FCE7316E27409C4F2074D3433CFF3E5FAD59E1B78A226616CB9E3E9EB2B3B7F906B4FB8BB542E7358CDEBEF09610F3640EFC250CA5AC0F349901A66A3AF79C6064909D0D6377550E598D68EA7400C39C000F74472C61379B3511EA14D098011770D0A5907E68C6AACAC25103B58EEE445C0EA12FD4F1B8142FE866E7FD3F9D5165F2CCAAD54ACC206B4907493B5DBB04767A3CC16E6B6E41DCF73D4880B4009B31AF1CE2D312515547BDBCA8C9CBD2EA63C87CF5C9DE15FB0D9AA220CB3B86E63DEB8230AAD55509E698EF64E91B4385B35FF0379529731BD1C496DA9D922A5633D253AF29C06A70D63050DC745351ECC5D750FEBC93B02F17203076B8A4B19C4DDFE856AEF683A9EAD4F2B0742D0387BC49189FD94A7BB638B502CBD49E73F5F0024EF08E5F7F46E440605D228599D1276F811A605D73357202CB910513C9EBC924439D9237314E637C2A40529E3E659EC334F57FB02FFAE23A8DDD02A22D2F39D68482357F08BFACED65C067940FAE678FA20F920260D16E3AB099D6A83162E3B5B32CF4EFBDCAEE4B5E58B7663012A25A85787CB1B964EDCB4343FF3CD6CFBF5305053E3C412CAD5951D8134399217BC06334ABAE6BB8D4D0537A3CC7A8AE9A8204F8FDC16C075E7E4450FCFD9FC55FA



0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 719 372 rc
-567 642 m
789 642 l
789 -197 l
-567 -197 l
h
-567 642 m
f
/Cs2 SC
0 0.58980089 1 sc
211.68198 253.68198 m
213.43935 251.92462 213.43935 249.07538 211.68198 247.31802 c
209.92462 245.56065 207.07538 245.56065 205.31802 247.31802 c
203.56065 249.07538 203.56065 251.92462 205.31802 253.68198 c
207.07538 255.43935 209.92462 255.43935 211.68198 253.68198 c
f
211.68198 235.68198 m
213.43935 233.92462 213.43935 231.07538 211.68198 229.31802 c
209.92462 227.56065 207.07538 227.56065 205.31802 229.31802 c
203.56065 231.07538 203.56065 233.92462 205.31802 235.68198 c
207.07538 237.43935 209.92462 237.43935 211.68198 235.68198 c
f
211.68198 217.68198 m
213.43935 215.92462 213.43935 213.07538 211.68198 211.31802 c
209.92462 209.56065 207.07538 209.56065 205.31802 211.31802 c
203.56065 213.07538 203.56065 215.92462 205.31802 217.68198 c
207.07538 219.43935 209.92462 219.43935 211.68198 217.68198 c
f
211.68198 199.68198 m
213.43935 197.92462 213.43935 195.07538 211.68198 193.31802 c
209.92462 191.56065 207.07538 191.56065 205.31802 193.31802 c
203.56065 195.07538 203.56065 197.92462 205.31802 199.68198 c
207.07538 201.43935 209.92462 201.43935 211.68198 199.68198 c
f
211.68198 181.68198 m
213.43935 179.92462 213.43935 177.07538 211.68198 175.31802 c
209.92462 173.56065 207.07538 173.56065 205.31802 175.31802 c
203.56065 177.07538 203.56065 179.92462 205.31802 181.68198 c
207.07538 183.43935 209.92462 183.43935 211.68198 181.68198 c
f
211.68198 163.68198 m
213.43935 161.92462 213.43935 159.07538 211.68198 157.31802 c
209.92462 155.56065 207.07538 155.56065 205.31802 157.31802 c
203.56065 159.07538 203.56065 161.92462 205.31802 163.68198 c
207.07538 165.43935 209.92462 165.43935 211.68198 163.68198 c
f
211.68198 145.68198 m
213.43935 143.92462 213.43935 141.07538 211.68198 139.31802 c
209.92462 137.56065 207.07538 137.56065 205.31802 139.31802 c
203.56065 141.07538 203.56065 143.92462 205.31802 145.68198 c
207.07538 147.43935 209.92462 147.43935 211.68198 145.68198 c
f
211.68198 127.68198 m
213.43935 125.92462 213.43935 123.07538 211.68198 121.31802 c
209.92462 119.56065 207.07538 119.56065 205.31802 121.31802 c
203.56065 123.07538 203.56065 125.92462 205.31802 127.68198 c
207.07538 129.43935 209.92462 129.43935 211.68198 127.68198 c
f
/Cs3 SC
0 sc
1 0 0 -1 90 270 cm
/F1.1[ 16 0 0 -16 0 0]sf
-47.416 5.776001 m
(!"#$%&'\(\)*+#)[ 12.160000 9.488000 8.000000 8.592000 5.328000 8.000000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
1 0 0 -1 320 357 cm
-13.344 5.776001 m
(,--)[ 8.896000 8.896000 0.000000 ] xS
1 0 0 -1 208.5 87 cm
-20 5.776001 m
(.$/0)[ 10.960000 8.592000 8.896000 0.000000 ] xS
/Cs2 SC
0 0.58980089 1 sc
CM
323.18198 343.68198 m
324.93933 341.92462 324.93933 339.07538 323.18198 337.31802 c
321.42462 335.56067 318.57538 335.56067 316.81802 337.31802 c
315.06067 339.07538 315.06067 341.92462 316.81802 343.68198 c
318.57538 345.43933 321.42462 345.43933 323.18198 343.68198 c
f
323.18198 325.68198 m
324.93933 323.92462 324.93933 321.07538 323.18198 319.31802 c
321.42462 317.56067 318.57538 317.56067 316.81802 319.31802 c
315.06067 321.07538 315.06067 323.92462 316.81802 325.68198 c
318.57538 327.43933 321.42462 327.43933 323.18198 325.68198 c
f
323.18198 307.68198 m
324.93933 305.92462 324.93933 303.07538 323.18198 301.31802 c
321.42462 299.56067 318.57538 299.56067 316.81802 301.31802 c
315.06067 303.07538 315.06067 305.92462 316.81802 307.68198 c
318.57538 309.43933 321.42462 309.43933 323.18198 307.68198 c
f
323.18198 289.68198 m
324.93933 287.92462 324.93933 285.07538 323.18198 283.31802 c
321.42462 281.56067 318.57538 281.56067 316.81802 283.31802 c
315.06067 285.07538 315.06067 287.92462 316.81802 289.68198 c
318.57538 291.43933 321.42462 291.43933 323.18198 289.68198 c
f
323.18198 271.68198 m
324.93933 269.92462 324.93933 267.07538 323.18198 265.31802 c
321.42462 263.56067 318.57538 263.56067 316.81802 265.31802 c
315.06067 267.07538 315.06067 269.92462 316.81802 271.68198 c
318.57538 273.43933 321.42462 273.43933 323.18198 271.68198 c
f
323.18198 253.68198 m
324.93933 251.92462 324.93933 249.07538 323.18198 247.31802 c
321.42462 245.56065 318.57538 245.56065 316.81802 247.31802 c
315.06067 249.07538 315.06067 251.92462 316.81802 253.68198 c
318.57538 255.43935 321.42462 255.43935 323.18198 253.68198 c
f
323.18198 235.68198 m
324.93933 233.92462 324.93933 231.07538 323.18198 229.31802 c
321.42462 227.56065 318.57538 227.56065 316.81802 229.31802 c
315.06067 231.07538 315.06067 233.92462 316.81802 235.68198 c
318.57538 237.43935 321.42462 237.43935 323.18198 235.68198 c
f
323.18198 217.68198 m
324.93933 215.92462 324.93933 213.07538 323.18198 211.31802 c
321.42462 209.56065 318.57538 209.56065 316.81802 211.31802 c
315.06067 213.07538 315.06067 215.92462 316.81802 217.68198 c
318.57538 219.43935 321.42462 219.43935 323.18198 217.68198 c
f
323.18198 199.68198 m
324.93933 197.92462 324.93933 195.07538 323.18198 193.31802 c
321.42462 191.56065 318.57538 191.56065 316.81802 193.31802 c
315.06067 195.07538 315.06067 197.92462 316.81802 199.68198 c
318.57538 201.43935 321.42462 201.43935 323.18198 199.68198 c
f
323.18198 181.68198 m
324.93933 179.92462 324.93933 177.07538 323.18198 175.31802 c
321.42462 173.56065 318.57538 173.56065 316.81802 175.31802 c
315.06067 177.07538 315.06067 179.92462 316.81802 181.68198 c
318.57538 183.43935 321.42462 183.43935 323.18198 181.68198 c
f
323.18198 163.68198 m
324.93933 161.92462 324.93933 159.07538 323.18198 157.31802 c
321.42462 155.56065 318.57538 155.56065 316.81802 157.31802 c
315.06067 159.07538 315.06067 161.92462 316.81802 163.68198 c
318.57538 165.43935 321.42462 165.43935 323.18198 163.68198 c
f
323.18198 145.68198 m
324.93933 143.92462 324.93933 141.07538 323.18198 139.31802 c
321.42462 137.56065 318.57538 137.56065 316.81802 139.31802 c
315.06067 141.07538 315.06067 143.92462 316.81802 145.68198 c
318.57538 147.43935 321.42462 147.43935 323.18198 145.68198 c
f
323.18198 127.68198 m
324.93933 125.92462 324.93933 123.07538 323.18198 121.31802 c
321.42462 119.56065 318.57538 119.56065 316.81802 121.31802 c
315.06067 123.07538 315.06067 125.92462 316.81802 127.68198 c
318.57538 129.43935 321.42462 129.43935 323.18198 127.68198 c
f
323.18198 109.68198 m
324.93933 107.92462 324.93933 105.07538 323.18198 103.31802 c
321.42462 101.56065 318.57538 101.56065 316.81802 103.31802 c
315.06067 105.07538 315.06067 107.92462 316.81802 109.68198 c
318.57538 111.43935 321.42462 111.43935 323.18198 109.68198 c
f
323.18198 91.681976 m
324.93933 89.924622 324.93933 87.075378 323.18198 85.318024 c
321.42462 83.560654 318.57538 83.560654 316.81802 85.318024 c
315.06067 87.075378 315.06067 89.924622 316.81802 91.681976 c
318.57538 93.439346 321.42462 93.439346 323.18198 91.681976 c
f
323.18198 73.681976 m
324.93933 71.924622 324.93933 69.075378 323.18198 67.318024 c
321.42462 65.560654 318.57538 65.560654 316.81802 67.318024 c
315.06067 69.075378 315.06067 71.924622 316.81802 73.681976 c
318.57538 75.439346 321.42462 75.439346 323.18198 73.681976 c
f
323.18198 55.681976 m
324.93933 53.924618 324.93933 51.075382 323.18198 49.318024 c
321.42462 47.560658 318.57538 47.560658 316.81802 49.318024 c
315.06067 51.075382 315.06067 53.924618 316.81802 55.681976 c
318.57538 57.439342 321.42462 57.439342 323.18198 55.681976 c
f
323.18198 37.681976 m
324.93933 35.924618 324.93933 33.075382 323.18198 31.318024 c
321.42462 29.560656 318.57538 29.560656 316.81802 31.318024 c
315.06067 33.075382 315.06067 35.924618 316.81802 37.681976 c
318.57538 39.439342 321.42462 39.439342 323.18198 37.681976 c
f
/Cs3 SC
0 sc
1 0 0 -1 320 15 cm
-20 5.776001 m
(.$/0)[ 10.960000 8.592000 8.896000 0.000000 ] xS
1 0 0 -1 437 321 cm
-13.344 5.776001 m
(1--)[ 8.896000 8.896000 0.000000 ] xS
/Cs2 SC
0 0.58980089 1 sc
CM
440.18198 307.68198 m
441.93933 305.92462 441.93933 303.07538 440.18198 301.31802 c
438.42462 299.56067 435.57538 299.56067 433.81802 301.31802 c
432.06067 303.07538 432.06067 305.92462 433.81802 307.68198 c
435.57538 309.43933 438.42462 309.43933 440.18198 307.68198 c
f
440.18198 289.68198 m
441.93933 287.92462 441.93933 285.07538 440.18198 283.31802 c
438.42462 281.56067 435.57538 281.56067 433.81802 283.31802 c
432.06067 285.07538 432.06067 287.92462 433.81802 289.68198 c
435.57538 291.43933 438.42462 291.43933 440.18198 289.68198 c
f
440.18198 271.68198 m
441.93933 269.92462 441.93933 267.07538 440.18198 265.31802 c
438.42462 263.56067 435.57538 263.56067 433.81802 265.31802 c
432.06067 267.07538 432.06067 269.92462 433.81802 271.68198 c
435.57538 273.43933 438.42462 273.43933 440.18198 271.68198 c
f
440.18198 253.68198 m
441.93933 251.92462 441.93933 249.07538 440.18198 247.31802 c
438.42462 245.56065 435.57538 245.56065 433.81802 247.31802 c
432.06067 249.07538 432.06067 251.92462 433.81802 253.68198 c
435.57538 255.43935 438.42462 255.43935 440.18198 253.68198 c
f
440.18198 235.68198 m
441.93933 233.92462 441.93933 231.07538 440.18198 229.31802 c
438.42462 227.56065 435.57538 227.56065 433.81802 229.31802 c
432.06067 231.07538 432.06067 233.92462 433.81802 235.68198 c
435.57538 237.43935 438.42462 237.43935 440.18198 235.68198 c
f
440.18198 217.68198 m
441.93933 215.92462 441.93933 213.07538 440.18198 211.31802 c
438.42462 209.56065 435.57538 209.56065 433.81802 211.31802 c
432.06067 213.07538 432.06067 215.92462 433.81802 217.68198 c
435.57538 219.43935 438.42462 219.43935 440.18198 217.68198 c
f
440.18198 199.68198 m
441.93933 197.92462 441.93933 195.07538 440.18198 193.31802 c
438.42462 191.56065 435.57538 191.56065 433.81802 193.31802 c
432.06067 195.07538 432.06067 197.92462 433.81802 199.68198 c
435.57538 201.43935 438.42462 201.43935 440.18198 199.68198 c
f
440.18198 181.68198 m
441.93933 179.92462 441.93933 177.07538 440.18198 175.31802 c
438.42462 173.56065 435.57538 173.56065 433.81802 175.31802 c
432.06067 177.07538 432.06067 179.92462 433.81802 181.68198 c
435.57538 183.43935 438.42462 183.43935 440.18198 181.68198 c
f
440.18198 163.68198 m
441.93933 161.92462 441.93933 159.07538 440.18198 157.31802 c
438.42462 155.56065 435.57538 155.56065 433.81802 157.31802 c
432.06067 159.07538 432.06067 161.92462 433.81802 163.68198 c
435.57538 165.43935 438.42462 165.43935 440.18198 163.68198 c
f
440.18198 145.68198 m
441.93933 143.92462 441.93933 141.07538 440.18198 139.31802 c
438.42462 137.56065 435.57538 137.56065 433.81802 139.31802 c
432.06067 141.07538 432.06067 143.92462 433.81802 145.68198 c
435.57538 147.43935 438.42462 147.43935 440.18198 145.68198 c
f
440.18198 127.68198 m
441.93933 125.92462 441.93933 123.07538 440.18198 121.31802 c
438.42462 119.56065 435.57538 119.56065 433.81802 121.31802 c
432.06067 123.07538 432.06067 125.92462 433.81802 127.68198 c
435.57538 129.43935 438.42462 129.43935 440.18198 127.68198 c
f
440.18198 109.68198 m
441.93933 107.92462 441.93933 105.07538 440.18198 103.31802 c
438.42462 101.56065 435.57538 101.56065 433.81802 103.31802 c
432.06067 105.07538 432.06067 107.92462 433.81802 109.68198 c
435.57538 111.43935 438.42462 111.43935 440.18198 109.68198 c
f
440.18198 91.681976 m
441.93933 89.924622 441.93933 87.075378 440.18198 85.318024 c
438.42462 83.560654 435.57538 83.560654 433.81802 85.318024 c
432.06067 87.075378 432.06067 89.924622 433.81802 91.681976 c
435.57538 93.439346 438.42462 93.439346 440.18198 91.681976 c
f
440.18198 73.681976 m
441.93933 71.924622 441.93933 69.075378 440.18198 67.318024 c
438.42462 65.560654 435.57538 65.560654 433.81802 67.318024 c
432.06067 69.075378 432.06067 71.924622 433.81802 73.681976 c
435.57538 75.439346 438.42462 75.439346 440.18198 73.681976 c
f
/Cs3 SC
0 sc
1 0 0 -1 437 51 cm
-20 5.776001 m
(.$/0)[ 10.960000 8.592000 8.896000 0.000000 ] xS
1 0 0 -1 529 252 cm
-4.448 5.776001 m
(1)s
/Cs2 SC
0 0.58980089 1 sc
CM
532.18201 208.68198 m
533.93933 206.92462 533.93933 204.07538 532.18201 202.31802 c
530.42462 200.56065 527.57538 200.56065 525.81799 202.31802 c
524.06067 204.07538 524.06067 206.92462 525.81799 208.68198 c
527.57538 210.43935 530.42462 210.43935 532.18201 208.68198 c
f
532.18201 190.68198 m
533.93933 188.92462 533.93933 186.07538 532.18201 184.31802 c
530.42462 182.56065 527.57538 182.56065 525.81799 184.31802 c
524.06067 186.07538 524.06067 188.92462 525.81799 190.68198 c
527.57538 192.43935 530.42462 192.43935 532.18201 190.68198 c
f
532.18201 172.68198 m
533.93933 170.92462 533.93933 168.07538 532.18201 166.31802 c
530.42462 164.56065 527.57538 164.56065 525.81799 166.31802 c
524.06067 168.07538 524.06067 170.92462 525.81799 172.68198 c
527.57538 174.43935 530.42462 174.43935 532.18201 172.68198 c
f
/Cs3 SC
0 sc
1 0 0 -1 529 123 cm
-33.048 5.776001 m
(2'%3\('+4)[ 11.552000 8.592000 5.040000 9.488000 5.040000 8.592000 8.896000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
1 0 0 -1 -567 642 cm
779.00189 388.67334 m
883.49811 304.32666 l
S
891.30188 302.82364 m
999.69812 336.17636 l
S
1092.9366 433.20358 m
1007.0634 340.79642 l
S
891.08691 303.38626 m
999.91309 353.61374 l
S
1000.1667 371.14102 m
890.83331 303.85898 l
S
890.5672 304.24399 m
1000.4328 388.75601 l
S
1000.6934 406.44769 m
890.30664 304.55231 l
S
890.06207 304.79761 m
1000.9379 424.20239 l
S
1001.1621 442.0072 m
889.83789 304.9928 l
S
889.63507 305.14859 m
1001.3649 459.85141 l
S
1001.5471 477.72623 m
889.45294 305.27377 l
S
889.28986 305.37509 m
1001.7101 495.62491 l
S
1001.8561 513.54218 m
889.14386 305.45786 l
S
889.013 305.526 m
1001.987 531.474 l
S
1002.1045 549.41736 m
888.89551 305.58264 l
S
888.78973 305.6301 m
1002.2103 567.36987 l
S
1006.7818 341.03772 m
1093.2181 450.96228 l
S
1093.4653 468.78073 m
1006.5346 341.21927 l
S
779.00189 388.67334 m
883.49811 304.32666 l
S
883.21887 321.94162 m
779.28113 389.05838 l
S
779.7832 390.11707 m
882.7168 356.88293 l
S
882.94885 339.46198 m
779.55115 389.53802 l
S
779.94281 390.78278 m
882.55719 374.21722 l
S
882.5 391.5 m
780 391.5 l
S
779.94281 392.21722 m
882.55719 408.78278 l
S
882.7168 426.11707 m
779.7832 392.88293 l
S
779.55115 393.46198 m
882.94885 443.53802 l
S
883.21887 461.05838 m
779.28113 393.94162 l
S
779.00189 394.32666 m
883.49811 478.67334 l
S
883.7677 496.36914 m
778.7323 394.63086 l
S
778.48224 394.87009 m
884.01776 514.12994 l
S
884.24469 531.94153 m
778.25531 395.05844 l
S
778.05176 395.20749 m
884.44824 549.79248 l
S
884.62976 567.67365 m
777.87024 395.32639 l
S
777.70862 395.42203 m
884.79138 585.57794 l
S
884.9353 603.50024 m
777.5647 395.49976 l
S
779.00189 520.32666 m
883.49811 604.67334 l
S
883.21887 587.05835 m
779.28113 519.94165 l
S
882.94885 569.53802 m
779.55115 519.46198 l
S
779.7832 518.88293 m
882.7168 552.11707 l
S
882.55719 534.78278 m
779.94281 518.21722 l
S
780 517.5 m
882.5 517.5 l
S
882.55719 500.21722 m
779.94281 516.78278 l
S
779.7832 516.11707 m
882.7168 482.88293 l
S
882.94885 465.46198 m
779.55115 515.53802 l
S
779.28113 515.05835 m
883.21887 447.94162 l
S
883.49811 430.32666 m
779.00189 514.67334 l
S
778.7323 514.36914 m
883.7677 412.63086 l
S
884.01776 394.87009 m
778.48224 514.12994 l
S
778.25531 513.94153 m
884.24469 377.05844 l
S
884.44824 359.20749 m
778.05176 513.79248 l
S
777.87024 513.67365 m
884.62976 341.32639 l
S
884.79138 323.42203 m
777.70862 513.57794 l
S
777.5647 513.50024 m
884.9353 305.49976 l
S
891.30188 606.17633 m
999.69812 572.82367 l
S
999.91309 555.38629 m
891.08691 605.61371 l
S
890.83331 605.14105 m
1000.1667 537.85895 l
S
1000.4328 520.24402 m
890.5672 604.75598 l
S
890.30664 604.44769 m
1000.6934 502.55231 l
S
1000.9379 484.79761 m
890.06207 604.20239 l
S
889.83789 604.0072 m
1001.1621 466.9928 l
S
1001.3649 449.14859 m
889.63507 603.85138 l
S
889.45294 603.72626 m
1001.5471 431.27377 l
S
1001.7101 413.37509 m
889.28986 603.62488 l
S
889.14386 603.54218 m
1001.8561 395.45786 l
S
1001.987 377.526 m
889.013 603.474 l
S
888.89551 603.41736 m
1002.1045 359.58264 l
S
1002.2103 341.6301 m
888.78973 603.36987 l
S
1007.0634 568.20355 m
1092.9366 475.79642 l
S
1006.7818 567.96228 m
1093.2181 458.03772 l
S
1093.4653 440.21927 m
1006.5346 567.7807 l
S
Q
0.60000002 i
/Cs2 SC
1 1 1 sc
T soprm
q
603.58728 237 m
703.58728 237 l
710.76697 237 716.58728 231.1797 716.58728 224 c
716.58728 151 l
716.58728 143.8203 710.76697 138 703.58728 138 c
603.58728 138 l
596.40753 138 590.58728 143.8203 590.58728 151 c
590.58728 224 l
590.58728 231.1797 596.40753 237 603.58728 237 c
h
603.58728 237 m
W
604.22729 156.08354 94.219925 62.832912 rc
670.88293 203.77557 m
667.22314 201.47368 662.38995 202.57411 660.08838 206.23395 c
657.78613 209.89377 658.8869 214.72661 662.54639 217.02885 c
666.20654 219.33075 671.03943 218.22997 673.34131 214.57014 c
675.64319 210.91032 674.54242 206.07747 670.88293 203.77557 c
f
4 w
0 0 0 sc
T setstrokeadjust
0.34239131 0 0 0.34239131 670.88293 203.77557 cm
0 0 m
-10.689 -6.723 -24.805 -3.5090001 -31.527 7.1799998 c
-38.250999 17.868999 -35.035999 31.983999 -24.348 38.708 c
-13.658 45.431 0.45699999 42.216 7.1799998 31.527 c
13.903 20.837999 10.688 6.723 0 0 c
h
S
0.34239131 0 0 0.34239131 645.17517 172.31587 cm
0 0 m
-11.386 -7.1620002 -26.422001 -3.737 -33.584 7.6490002 c
-40.745998 19.035 -37.320999 34.070999 -25.936001 41.233002 c
-14.549 48.395 0.48699999 44.971001 7.6490002 33.584 c
14.811 22.198 11.387 7.1620002 0 0 c
h
S
1 1 1 sc
CM
694.66107 172.70743 m
691.5614 170.75751 687.46814 171.68983 685.51819 174.78986 c
683.56866 177.88953 684.50061 181.9828 687.60065 183.93272 c
690.70062 185.88231 694.79395 184.94997 696.74353 181.85031 c
698.69312 178.75064 697.76111 174.657 694.66107 172.70743 c
f
0 0 0 sc
0.34239131 0 0 0.34239131 694.66107 172.70743 cm
0 0 m
-9.0530005 -5.6950002 -21.007999 -2.9719999 -26.702999 6.0819998 c
-32.396999 15.135 -29.674999 27.09 -20.621 32.785 c
-11.567 38.479 0.38800001 35.756001 6.0819998 26.702999 c
11.776 17.65 9.0539999 5.6939998 0 0 c
h
S
0.97600001 0.53299999 0.071000002 sc
CM
619.28284 164.38571 m
623.72601 164.38571 612.44324 164.38571 608.37836 165.14171 c
604.63226 165.83882 604.14539 168.12839 604.83289 169.05832 c
605.52039 169.9886 610.10638 168.91623 612.92084 168.58308 c
615.89691 168.23042 617.16138 167.78291 623.02686 167.97089 c
623.13129 168.77003 623.47198 171.36571 623.47198 171.36571 c
630.1969 171.36571 l
631.27545 174.18941 l
650.0816 174.18941 l
651.16046 171.36571 l
657.88507 171.36571 l
657.88507 171.36571 658.22571 168.77003 658.33051 167.97089 c
664.19598 167.78291 665.46008 168.23042 668.43652 168.58308 c
671.25061 168.91623 675.83698 169.9886 676.52448 169.05832 c
677.21167 168.12839 676.72516 165.83882 672.9787 165.14171 c
668.91382 164.38571 657.63135 164.38571 662.07452 164.38571 c
h
f
2 w
0 0 0 sc
0.34239131 0 0 0.34239131 619.28284 164.38571 cm
0 0 m
12.977 0 -19.976 0 -31.848 2.2079999 c
-42.789001 4.244 -44.210999 10.931 -42.202999 13.647 c
-40.195 16.364 -26.801001 13.232 -18.580999 12.259 c
-9.8889999 11.229 -6.1960001 9.9219999 10.935 10.471 c
11.24 12.805 12.235 20.386 12.235 20.386 c
31.875999 20.386 l
35.026001 28.632999 l
89.952003 28.632999 l
93.102997 20.386 l
112.743 20.386 l
112.743 20.386 113.738 12.805 114.044 10.471 c
131.175 9.9219999 134.867 11.229 143.56 12.259 c
151.77901 13.232 165.174 16.364 167.18201 13.647 c
169.189 10.931 167.76801 4.244 156.826 2.2079999 c
144.95399 0 112.002 0 124.979 0 c
0 0 l
h
S
1 1 1 sc
CM
623.47211 160.21347 m
623.47211 158.1218 621.77661 156.42593 619.68457 156.42593 c
617.59259 156.42593 615.89703 158.1218 615.89703 160.21347 c
615.89703 162.30513 617.59259 164.00101 619.68457 164.00101 c
621.77661 164.00101 623.47211 162.30513 623.47211 160.21347 c
f
0 0 0 sc
0.34239131 0 0 0.34239131 623.47211 160.21347 cm
0 0 m
0 -6.1090002 -4.9520001 -11.062 -11.062 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.062 -11.062 11.062 c
-4.9520001 11.062 0 6.1090002 0 0 c
h
S
CM
620.53033 160.21347 m
620.53033 159.74644 620.15204 159.36777 619.68463 159.36777 c
619.21729 159.36777 618.83893 159.74644 618.83893 160.21347 c
618.83893 160.6805 619.21729 161.05917 619.68463 161.05917 c
620.15204 161.05917 620.53033 160.6805 620.53033 160.21347 c
f
1 1 1 sc
666.37634 160.21347 m
666.37634 158.1218 664.68048 156.42593 662.5885 156.42593 c
660.49683 156.42593 658.80127 158.1218 658.80127 160.21347 c
658.80127 162.30513 660.49683 164.00101 662.5885 164.00101 c
664.68048 164.00101 666.37634 162.30513 666.37634 160.21347 c
f
0 0 0 sc
0.34239131 0 0 0.34239131 666.37634 160.21347 cm
0 0 m
0 -6.1090002 -4.9530001 -11.062 -11.063 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.062 -11.063 11.062 c
-4.9530001 11.062 0 6.1090002 0 0 c
h
S
CM
663.43457 160.21347 m
663.43457 159.74644 663.05591 159.36777 662.58856 159.36777 c
662.12152 159.36777 661.74316 159.74644 661.74316 160.21347 c
661.74316 160.6805 662.12152 161.05917 662.58856 161.05917 c
663.05591 161.05917 663.43457 160.6805 663.43457 160.21347 c
f
0.97600001 0.53299999 0.071000002 sc
663.10992 213.5894 m
637.10492 182.36844 l
644.33588 176.34578 l
670.34088 207.56639 l
h
f
0 0 0 sc
0.34239131 0 0 0.34239131 663.10992 213.5894 cm
0 0 m
-75.950996 -91.184998 l
-54.832001 -108.775 l
21.118999 -17.591 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
680.76477 183.84901 m
685.50861 177.24565 l
693.64691 183.09198 l
688.90308 189.69569 l
686.4718 189.78574 l
669.11975 213.93939 l
664.10333 210.33572 l
681.45538 186.18173 l
h
f
0 0 0 sc
0.34239131 0 0 0.34239131 680.76477 183.84901 cm
0 0 m
13.855 -19.285999 l
37.624001 -2.211 l
23.768999 17.076 l
16.667999 17.339001 l
-34.011002 87.883003 l
-48.661999 77.358002 l
2.017 6.8130002 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
670.88293 203.77557 m
667.22314 201.47368 662.38995 202.57411 660.08838 206.23395 c
657.78613 209.89377 658.8869 214.72661 662.54639 217.02885 c
666.20654 219.33075 671.03943 218.22997 673.34131 214.57014 c
675.64319 210.91032 674.54242 206.07747 670.88293 203.77557 c
f
0.98000002 0.98000002 0.97600001 sc
669.97174 205.22389 m
667.11176 203.42531 663.33521 204.28539 661.53625 207.14505 c
659.73767 210.00504 660.59778 213.78162 663.45776 215.58054 c
666.31744 217.37912 670.09399 216.51903 671.89294 213.65938 c
673.69153 210.79939 672.83179 207.02281 669.97174 205.22389 c
f
0.97600001 0.53299999 0.071000002 sc
668.80652 207.07677 m
666.96991 205.92154 664.54443 206.47382 663.38953 208.31041 c
662.23431 210.14699 662.78656 212.57249 664.6228 213.72772 c
666.45978 214.88261 668.88489 214.33034 670.04016 212.49374 c
671.19537 210.6575 670.64276 208.23199 668.80652 207.07677 c
f
645.2146 172.25317 m
641.31616 169.80096 636.16797 170.97366 633.71576 174.87213 c
631.26355 178.7706 632.43622 183.91879 636.33435 186.371 c
640.23315 188.82321 645.38135 187.65086 647.83325 183.75204 c
650.28577 179.85358 649.1134 174.70538 645.2146 172.25317 c
f
0.98000002 0.98000002 0.97600001 sc
643.66681 174.71378 m
641.12732 173.11652 637.77362 173.88005 636.17633 176.41957 c
634.5791 178.95943 635.34259 182.31314 637.88214 183.9104 c
640.42163 185.50766 643.77539 184.74379 645.37262 182.20427 c
646.97021 179.66475 646.20636 176.31137 643.66681 174.71378 c
f
0.97600001 0.53299999 0.071000002 sc
642.42871 176.68253 m
640.97626 175.76903 639.05853 176.20557 638.14502 177.65799 c
637.23151 179.11041 637.6684 181.02815 639.12048 181.94165 c
640.57294 182.85515 642.49097 182.41826 643.40448 180.96619 c
644.31799 179.51376 643.88074 177.59602 642.42871 176.68253 c
f
1 1 1 sc
694.66107 172.70743 m
691.5614 170.75751 687.46814 171.68983 685.51819 174.78986 c
683.56866 177.88953 684.50061 181.9828 687.60065 183.93272 c
690.70062 185.88231 694.79395 184.94997 696.74353 181.85031 c
698.69312 178.75064 697.76111 174.657 694.66107 172.70743 c
f
Q
1 J
1 j
[
4
4
] 0 d
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
F soprm
q
0 0 719 372 rc
1 0 0 -1 -567 642 cm
1170.5873 405 m
1270.5873 405 l
1277.767 405 1283.5873 410.82031 1283.5873 418 c
1283.5873 491 l
1283.5873 498.17969 1277.767 504 1270.5873 504 c
1170.5873 504 l
1163.4076 504 1157.5873 498.17969 1157.5873 491 c
1157.5873 418 l
1157.5873 410.82031 1163.4076 405 1170.5873 405 c
h
1170.5873 405 m
S
Q
/Cs2 SC
1 1 1 sc
T soprm
q
49 246 m
131 246 l
138.1797 246 144 240.1797 144 233 c
144 142 l
144 134.8203 138.1797 129 131 129 c
49 129 l
41.820297 129 36 134.8203 36 142 c
36 233 l
36 240.1797 41.820297 246 49 246 c
h
49 246 m
W
50.227955 141.49385 72.912506 89.691368 rc
117.52865 179.43466 m
113.67728 178.1003 109.47378 180.14088 108.13942 183.99225 c
106.80539 187.84361 108.84598 192.04745 112.69734 193.38148 c
116.5487 194.71584 120.75221 192.67525 122.08624 188.82388 c
123.4206 184.9722 121.38001 180.76869 117.52865 179.43466 c
f
4 w
0 J
0 j
[] 0 d
0 0 0 sc
T setstrokeadjust
0.32277596 0 0 0.32277596 117.52865 179.43466 cm
0 0 m
-11.932 -4.1339998 -24.955 2.188 -29.089001 14.12 c
-33.222 26.052 -26.9 39.076 -14.968 43.209 c
-3.036 47.342999 9.9870005 41.021 14.12 29.089001 c
18.254 17.156 11.932 4.1329999 0 0 c
h
S
0.32277596 0 0 0.32277596 87.217628 156.02235 cm
0 0 m
-12.71 -4.4029999 -26.584 2.332 -30.986 15.042 c
-35.389999 27.752001 -28.655001 41.625 -15.944 46.028 c
-3.234 50.431999 10.639 43.695999 15.042 30.986 c
19.444 18.275999 12.71 4.4029999 0 0 c
h
S
1 1 1 sc
CM
113.35967 230.53949 m
116.81177 230.51302 119.58893 227.69325 119.56278 224.24115 c
119.53632 220.78906 116.71622 218.0119 113.26446 218.03838 c
109.81237 218.06483 107.0352 220.88429 107.06135 224.33638 c
107.08781 227.78879 109.90759 230.56563 113.35967 230.53949 c
f
0 0 0 sc
0.32277596 0 0 0.32277596 113.35967 230.53949 cm
0 0 m
10.695 -0.082000002 19.299 -8.8179998 19.218 -19.513 c
19.136 -30.208 10.399 -38.812 -0.29499999 -38.73 c
-10.99 -38.647999 -19.594 -29.913 -19.513 -19.218 c
-19.431 -8.5220003 -10.695 0.081 0 0 c
h
S
0.97600001 0.53299999 0.071000002 sc
CM
64.420967 149.32034 m
68.609627 149.32034 57.97319 149.32034 54.141193 150.03334 c
50.609703 150.6902 50.150715 152.8486 50.798851 153.72527 c
51.446983 154.60225 55.770245 153.59131 58.423466 153.27725 c
61.229034 152.94479 62.421043 152.52324 67.950516 152.70012 c
68.048965 153.45348 68.370125 155.90045 68.370125 155.90045 c
74.70977 155.90045 l
75.726517 158.56238 l
93.455307 158.56238 l
94.472374 155.90045 l
100.81169 155.90045 l
100.81169 155.90045 101.13286 153.45348 101.23163 152.70012 c
106.7611 152.52324 107.95279 152.94479 110.75868 153.27725 c
113.41158 153.59131 117.73516 154.60225 118.38329 153.72527 c
119.03111 152.8486 118.57244 150.6902 115.04063 150.03334 c
111.20863 149.32034 100.57252 149.32034 104.76118 149.32034 c
h
f
2 w
0 0 0 sc
0.32277596 0 0 0.32277596 64.420967 149.32034 cm
0 0 m
12.977 0 -19.976 0 -31.848 2.2090001 c
-42.789001 4.244 -44.210999 10.931 -42.202999 13.647 c
-40.195 16.364 -26.801001 13.232 -18.580999 12.259 c
-9.8889999 11.229 -6.1960001 9.9230003 10.935 10.471 c
11.24 12.805 12.235 20.386 12.235 20.386 c
31.875999 20.386 l
35.026001 28.632999 l
89.952003 28.632999 l
93.102997 20.386 l
112.743 20.386 l
112.743 20.386 113.738 12.805 114.044 10.471 c
131.175 9.9230003 134.867 11.229 143.56 12.259 c
151.77901 13.232 165.174 16.364 167.18201 13.647 c
169.189 10.931 167.76801 4.244 156.826 2.2090001 c
144.95399 0 112.002 0 124.979 0 c
0 0 l
h
S
1 1 1 sc
CM
68.370224 145.38715 m
68.370224 143.41531 66.771835 141.8166 64.799675 141.8166 c
62.827515 141.8166 61.22913 143.41531 61.22913 145.38715 c
61.22913 147.35899 62.827515 148.95802 64.799675 148.95802 c
66.771835 148.95802 68.370224 147.35899 68.370224 145.38715 c
f
0 0 0 sc
0.32277596 0 0 0.32277596 68.370224 145.38715 cm
0 0 m
0 -6.1090002 -4.9520001 -11.062 -11.062 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.063 -11.062 11.063 c
-4.9520001 11.063 0 6.1090002 0 0 c
h
S
CM
65.597 145.38715 m
65.597 144.94688 65.240334 144.58989 64.799744 144.58989 c
64.359154 144.58989 64.002487 144.94688 64.002487 145.38715 c
64.002487 145.82742 64.359154 146.18472 64.799744 146.18472 c
65.240334 146.18472 65.597 145.82742 65.597 145.38715 c
f
1 1 1 sc
108.81654 145.38715 m
108.81654 143.41531 107.21783 141.8166 105.24567 141.8166 c
103.27383 141.8166 101.67545 143.41531 101.67545 145.38715 c
101.67545 147.35899 103.27383 148.95802 105.24567 148.95802 c
107.21783 148.95802 108.81654 147.35899 108.81654 145.38715 c
f
0 0 0 sc
0.32277596 0 0 0.32277596 108.81654 145.38715 cm
0 0 m
0 -6.1090002 -4.9530001 -11.062 -11.063 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.063 -11.063 11.063 c
-4.9530001 11.063 0 6.1090002 0 0 c
h
S
CM
106.04331 145.38715 m
106.04331 144.94688 105.68633 144.58989 105.24574 144.58989 c
104.80547 144.58989 104.4488 144.94688 104.4488 145.38715 c
104.4488 145.82742 104.80547 146.18472 105.24574 146.18472 c
105.68633 146.18472 106.04331 145.82742 106.04331 145.38715 c
f
0.97600001 0.53299999 0.071000002 sc
112.48179 190.10295 m
81.948471 166.97346 l
87.305588 159.9021 l
117.83858 183.03125 l
h
f
0 0 0 sc
0.32277596 0 0 0.32277596 112.48179 190.10295 cm
0 0 m
-94.596001 -71.657997 l
-77.999001 -93.566002 l
16.596001 -21.909 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
118.73528 214.63205 m
118.32278 222.28604 l
108.88965 221.77734 l
109.30247 214.12335 l
111.18749 212.81676 l
112.69711 184.82079 l
118.5116 185.1342 l
117.00198 213.13049 l
h
f
0 0 0 sc
0.32277596 0 0 0.32277596 118.73528 214.63205 cm
0 0 m
-1.278 23.712999 l
-30.503 22.136999 l
-29.224001 -1.576 l
-23.384001 -5.6240001 l
-18.707001 -92.359001 l
-0.69300002 -91.388 l
-5.3699999 -4.652 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
117.52865 179.43466 m
113.67728 178.1003 109.47378 180.14088 108.13942 183.99225 c
106.80539 187.84361 108.84598 192.04745 112.69734 193.38148 c
116.5487 194.71584 120.75221 192.67525 122.08624 188.82388 c
123.4206 184.9722 121.38001 180.76869 117.52865 179.43466 c
f
0.98000002 0.98000002 0.97600001 sc
117.00066 180.95868 m
113.99109 179.91643 110.7062 181.51094 109.66396 184.52019 c
108.62106 187.52975 110.21558 190.81464 113.22546 191.85721 c
116.2347 192.89977 119.5196 191.30525 120.56216 188.29538 c
121.60473 185.28613 120.01022 182.00124 117.00066 180.95868 c
f
0.97600001 0.53299999 0.071000002 sc
116.32518 182.9086 m
114.39272 182.23917 112.28306 183.26332 111.6133 185.19579 c
110.94386 187.12825 111.96803 189.23792 113.90049 189.90767 c
115.8336 190.5771 117.94293 189.55293 118.61237 187.62048 c
119.28181 185.68738 118.25797 183.57803 116.32518 182.9086 c
f
87.240356 155.95648 m
83.137871 154.53529 78.660004 156.70888 77.238815 160.81168 c
75.817635 164.91415 77.991531 169.39203 82.094017 170.81322 c
86.196815 172.23439 90.67469 170.0605 92.095551 165.95802 c
93.516731 161.85553 91.343163 157.37767 87.240356 155.95648 c
f
0.98000002 0.98000002 0.97600001 sc
86.343552 158.54591 m
83.670967 157.62019 80.754044 159.03621 79.827995 161.70848 c
78.902275 164.38106 80.318291 167.29799 82.990875 168.22371 c
85.663467 169.14975 88.580391 167.73373 89.506111 165.06116 c
90.431831 162.38857 89.015816 159.47163 86.343552 158.54591 c
f
0.97600001 0.53299999 0.071000002 sc
85.625832 160.61749 m
84.097481 160.08813 82.429375 160.89798 81.900024 162.42633 c
81.370346 163.95468 82.180191 165.62279 83.708862 166.15181 c
85.236885 166.68149 86.904991 165.87164 87.434662 164.34329 c
87.963692 162.81528 87.153847 161.14717 85.625832 160.61749 c
f
1 1 1 sc
113.35967 230.53949 m
116.81177 230.51302 119.58893 227.69325 119.56278 224.24115 c
119.53632 220.78906 116.71622 218.0119 113.26446 218.03838 c
109.81237 218.06483 107.0352 220.88429 107.06135 224.33638 c
107.08781 227.78879 109.90759 230.56563 113.35967 230.53949 c
f
Q
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
F soprm
q
0 0 719 372 rc
1 0 0 -1 -567 642 cm
616 396 m
698 396 l
705.17969 396 711 401.82031 711 409 c
711 500 l
711 507.17969 705.17969 513 698 513 c
616 513 l
608.82031 513 603 507.17969 603 500 c
603 409 l
603 401.82031 608.82031 396 616 396 c
h
616 396 m
S
[] 0 d
711 425.79114 m
771.52557 393.61298 l
S
771.29205 411.09793 m
711 433.99368 l
S
771.11188 428.49982 m
711 442.1962 l
S
771.01282 445.84079 m
711 450.39874 l
S
771.01282 463.15921 m
711 458.60126 l
S
771.11188 480.50018 m
711 466.8038 l
S
771.29205 497.90207 m
711 475.00632 l
S
771.52557 515.38702 m
711 483.20886 l
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 208.5 285 cm
/F1.1[ 16 0 0 -16 0 0]sf
-8.8959999 5.776001 m
(567)[ 8.896000 8.896000 0.000000 ] xS
1 0 0 -1 653.58728 249 cm
-26.816 5.776001 m
(89\(\)*+#)[ 10.368000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
1 0 0 -1 -567 642 cm
1100.454 471.85651 m
1157.5873 463.60205 l
S
1100.5 454.5 m
1157.5873 454.5 l
S
1100.454 437.14349 m
1157.5873 445.39795 l
S
ep
end
