%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 877.000000 256.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.16 (Build 20F71) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 877 256
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 877 256
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /F put
dup 34 /e put
dup 35 /a put
dup 36 /t put
dup 37 /u put
dup 38 /r put
dup 39 /space put
dup 40 /x put
dup 41 /c put
dup 42 /o put
dup 43 /M put
dup 44 /L put
dup 45 /P put
dup 46 /l put
dup 47 /i put
dup 48 /y put
dup 49 /R put
dup 50 /G put
dup 51 /B put
dup 52 /I put
dup 53 /m put
dup 54 /g put
dup 55 /three put
dup 56 /n put
dup 57 /v put
dup 58 /one put
dup 59 /b put
dup 60 /d put
dup 61 /two put
dup 62 /p put
dup 63 /h put
dup 64 /slash put
dup 65 /j put
dup 66 /f put
dup 67 /s put
dup 68 /S put
dup 69 /k put
dup 70 /w put
dup 71 /colon put
dup 72 /hyphen put
dup 73 /X put
dup 74 /Y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









0C0096000C00025DBA0014000500111112393031050E0323222627351E013332363F01033313331333010B0F1D232B1C0F1E0E0B1D0A1A230923CD609702915A452634210F04054E05071917570202FE5901A7000001000000010000D71B1C1E5F0F3CF5011103E800000000B643600000000000DB3521AEFC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002B01F400330116000001850032014DFFEF022C0057022C0018022C001D0116005302AD004E023E004E02F7002B01030052022C004E036700500288004E02AD004E02880025026300000288000202190024025100430219002402510024021900240128000C023E0024022C004000DE004500DEFFF30207004500DE004503550040022C0040023E002402510043014D003D01F4001F013B0009022C004001F4000E02F600110206000901F40008000000480048005A00700096011E0204023202F6032203B203CC03EC0436049E052E05C205F20620072A07C2083408D2093A09860A380A8A0AB40AF20B240B3E0BD80C200CC00D580D860E2A0E7C0ECC0EEC0F260F520FBC00010000002B0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 43 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/one 4 def
/two 5 def
/three 6 def
/colon 7 def
/B 8 def
/F 9 def
/G 10 def
/I 11 def
/L 12 def
/M 13 def
/P 14 def
/R 15 def
/S 16 def
/X 17 def
/Y 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/g 25 def
/h 26 def
/i 27 def
/j 28 def
/k 29 def
/l 30 def
/m 31 def
/n 32 def
/o 33 def
/p 34 def
/r 35 def
/s 36 def
/t 37 def
/u 38 def
/v 39 def
/w 40 def
/x 41 def
/y 42 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2879AE5455E9472BC0B76BE54A2587CC916E95CDED63F4095DF1F5913B67F99981123EB0068204B8D97BA02B75FE81A50D8CEE383A43D8302B5F7E452F1B2D79A5B6A4353BB64C3C0C3CEBC16E6355DC70A781A5C45AE702474BAD4F4A787DDA2FE49D6B49730BDA9944CAB2C2E711369CEB537A52F8706DFEC583D42B194D6ABBB2B8481B9172CC7C4788729D096383FE7445107A5DAB4C41B90440FAD768C2192A2DED861D1B3B50567D9986E2DE8F23E3E2204DF311DBFC070C1A4D2F285FF18BC9E0F3B1B5FBF1C66BDE8298D1E0308835082DBAF460BED5864A182356E77521CFA81E8CA9E07FC4B33449310184A4E984CEE549D8F03CE59588AC871514F3D87225D5E1CE7CDA6F97019973FAE8AAB2B4B24C09B4149FD65211B549442EF260EAE849B41F217D3692D584952146C1D1B20BA241369E73C45473A719D8757AC6BDFD4C19FBB99F832BB82A52E5DA3FB81790F606C78DF058CC8C38A0CC06B208ECF6403536D8837E3487758E5E4CDAB7963EAEADD70508B12367EE3F5AFF7A98D0EA2654310E63DFA66A19289955CE70112730B6BD9ECADC6FA5C71C2A134E48F9B52BE61C390EA9C33933DAB6DA76D6A9444DFE0C22661CEF4A5E5A3AB1B2CCB0DCF4CE09FAA453525DE737F3FC47F98CA9FBB8110F700290404AAA9F8FAC703DB1F89E192460FBC37B7C2809654273DB1DEA5E7C7749700EF36DCD79A0B2F5B3039B83446401852F268EC4F16964E04F15231F24C528DDAC3057F13984FB8642ED7
7C810718992A77C68E5873B13E6F0D14779CB47E9F9CAD9F241108B2C9CD1E708CC78F0BF535D6F3127981BA5DBF8E518FECD3802D9B45D15E3814D99730798B239405DF9E9D4EBD18BB56627B4FBFF7D04E0FA8E709D226A2A6F66437B32909D29E11C68225ED8750E432536BA2FCECCB13906236782EA34206C93B3FFAF30ED7F58D5CA02BEFF00E3ACE523ECD946F001A0D919C43B04BFD575DE4C9F708B8B3926E89D7DA1CA4E1DF8E80FDCF9E44E7F183068E88B1FED38A4D31C0B261A2ECD7396EF78400A40BDB0E864B51A682E11776D2186F26F2ABE3245B5F701C9D960D52260C7946498730143CD3D1603E24438674EFA8BB09F77551DFC16419A13ED9FA57EEE143EDBB960C5649D6A6A17443B33DFEF5BAD56206ADE4779616F8492C45E6E4B04A32D66F769BA09607E092C2C263461D9C3B2D59F95D03642C06648309EB8ACC1E93E1A4C3AFD4F0A1B154175ED1B4F388F4E86994FED71B24D91859AF5759FB97856428A6D2542B80182F71DF28CE8BEBED7BB2A546E614BA6F7241CBEA012002542436646E8B498830462D21663DE7F1B5C76CD0DA6D427804E5F9138A65FFE8F4D849B8722064D36760194C4B6135D9391044D1C33468DE804F4FFC2695DC41A52533DA9B64554A595ADFCB4E849C9F403DE3A7CA559162A72C1A5C8347DF2A8887AEB9E2F1B46144308B1537A4A8868BDF2E8F80AFD6A9013EAFA419A8A905B36C9E8E743C5575A175489352A1CCC538729A63ADF6C39470DF5D183B1ED8B73EAE8FD537300046D3B77686FA6D09483BAB0BEC03A8637DB864EB83D93ACA79142993654C5DF46645E817DD1BB2517EF11895635CE6F822DCAA04394A6343BAFAB0A7D223328A67BA7633BB67224F2737A926807D090E36D347FF330581C768EAE3938CABE1CCD400CF2EF19D50CF996C26DF588BA483B905D105377CD697C89CD0E5AB1A488D6E02B6105D6EC100BCDFBD84B3CE09BC6AF3CA19B52F4ED65C8D509F88E98E835CDC922460D5D3123568490403D927C7A216E69F7150E96B90B0CF8EBD3A2198C128E442951868DC63EEEE20874DA8F579F7CD03A7C4DE4BB6DDE9CA2F6CB1D6924A1AA0FD6409E20A9C673C8B2B5665F140AE71819C58E0B2374B9FBBD154BD7B9EFA4CCDAE9DB1AE82134A92CD343A056BF058E1B13324194A1B3CF326CA7C8DA0E039E84BC3B8C234879ED0A52B0DE4E9C13B2F3104752337A4E2DBD10DE3CFC6CF4B59E9F4C21C6DC0E1ABAA1F301D6C85578E513FF4F37FECF11DD3A5E5B970A30E33AEFB876E68E8261CA614C0B656F9EC0DB77D1EA86C364EF0877FAA0183FDDE3CEB86B25B07F2CA64816694F9DE8F1F93A25C7E6F587CF8267A6878E31241048CFEB3E919BC36A8764476DF46F0D531151AA1B9101663540A448E433DE211A87A6838215DE74E348702349E6E86
D4F75C46B499A20F2F86B6A2B841FCCDAC0775F6D6EF49024420AFF1125E9C58D48DDE9E4892B14CA7D04F5CCC0DB221B2E863351313FA8E5D7BF2B81D4CBF1EC3477DF3E7DB78A862205FC83080835B5E992E0B2D90CB10C082F3ADFB9911774A815F346310DCE8F520282521B3500C2B2B9349CAC05D5D57ACB4D96C15104573127562980DFB51F4050A92A1A85969027118C37ADA6C6DBA8FE7436DCE70AF7BD0CE8E7E2AC2B072D3D31C9576F31D5E7C25E7F0560BA9A64C21354CFF611D52108D64974BCC1B235EEB61E4A53511702CAC026C25364698DCF6A371E31EAAA2E4D8136607DA5F7A248DB2AAE0763DB4F6632C49112DB8CB8795C07E46A2F523D1C8D94522CCC57E2DF22075D1C6DCFD118FB3592778D90C62B96D1C12607DB8F3336D9F874FB4D8233440B24AC5C8733C4EA5D22CB2093A6E6B2EF36A90B4B390447EBDFD06B6E61C9C12940E06EBD43C3F0219FFBD0AD4B53F2294A87A632817CD29ABA9418430B86262E817EC39CDA6E23341E44CA9F2D078418DE8B11B3FAE3772C84234C631613669D5C0601B2109E0255A623F377418D42AB6332946529FBBF1795411C8C183C0FF2D0B1304D55FB454E5C3EDF4FB3F6AD167C2CC15CE3529038F73E797CEFBD65D08F27B1467697E64F2560110C7F73171C717F93DEA7BEA538B20B07AE1804BFF7DB090DEC48E70D2EF056C1A501C872190497B09B84A7E15C98C2B22C01AA9BAE019B694CE77F968754675CF55C51EFCED5B3C3EDCEEDDF92E0C489D99F07A5CDDDA61B56D1951146B7B370EC927C38144AD65E34EA73874347CB010EBB39DBDFA541A1878C06C9796E87ABD6CB09B9F52517A1090D827D2EAEA23A44845F549CE3BFC0592207709D623997184BEF738C9127CB00C1B201D16AC3597C0ADC9E29937F5723D21429E73F7C0212F01F9AC0F05486CAF606DDECE696BF04728B99A89F8991E0CD8FE82260637DE017C39F20FB69D3B48E8023300448D3C1EE82974116A4E1E8E22748CACF4C1FE01020612DDA5B95D9E1F7AD227781281AC46E797E084CB3EC55BEF7C505EE459C2EEDA3097A5B2B737FF939C250B01135851586721CC5806470F36AE82C35AA8B9F7312A341BA8FB7FB477C70EB9B0BDB13500516B9788273D83B3774BB3683DBB354F7D1C998338BCC47ABB96315005A4102D512EDF9A1E17DE16690E1DE8904E0A0D4C73257BF01BC3059179136CAAC9A26DA5F633820A8E829D0906B9CBF16DCB0AB40B186FC98120A713B88C6C09D04D44F489BCE0526E791A081DE5733C4435D33762EC8B913199D61B60AC6429864F47F3D60AC1893093841BA44D1989F0C4585D38827478C3BF43387FB665B267986CAE0D5CAF52575DFA13BB6E59260BAE8CDFBB3E3A3AF24B66F3BD6C642C81D5D518CF682E59F13D45C5E71BCD8D3153CE5738F92592



1A81641529D35729E713EFEE5E6183DB3442229E64788DE77017881689EFBACFBC366714C5B0EAA9DE1F3EAB018E978BA3F9DF9450A6CA8287EBD34D32C5C47E580DF5B9AE8CE67FE037A8AFC064DA0724A83B94945E534AF74B987C379729EC149B55D2B92D675BF250D204AF44BC71FDCFF2BC5595B20090D5844B23CC2868BA81C8281B52EFAAD1E0BD5BD792B9ECF1F20EC8BA38A89BEA57BCB9111066CF2AB56A3E666C355B37EF033B705AFAF6DA19AAF7A6DBA02E20A7434C4F202AE03AD2CB2F48C3F926C0927EF695FC327CF6BB84578574212DAB78E571F450CE06F9CCA56A3AFB3D6CBEE7149C70856E20EC569763C113A403C63A066C453AD1ECA01AF8A20DD67E57FC9A4E512AD8E2B28B5C40EA6AC82F2A8FD10DAC936DB7D1FC7AB9D937DC771694724D218D718627F85AD024C5766B9F57BEB06500801604DC1D7615EF31C0BB4E5575DC2C01C0772E216CF3CA6E1FDC4A97555E41ED41D014BB8025042F228EBD78E9CAFEBBAE2CF012AFE7B6DE3B3B725FC85DCD38BC743273A22CC35CEDE81536390D9EC13F082C01DD14F66D842589F302AEACC35DCEE5533B956216207DB137559D8FD5F9F22CCE7F9AB766674A1B0F487AF8908C9D84773B6FDCF75D63A58493744DF9EDF1FB311BE1B21CD0C14FEC9629DFA844AE5D80767B98D1EFE49B0B9E0ACC4B430D87C0C6A68B9E5A0403AF7BA1CE26913ECD96D40EEAF1D3A9C7FA89946897E006C70A09187B7621640B3AB141C869E1BF2F75D1DDBB88C25B7D8A533A0C121EAC2CF0426D44CD51CD49C80EF0C88929A853D7F5B375241CEC932EB1DBBA4A1660E79B3D39D6B55180BA1C28F49954F5D0A39B42D991A6FEBA7798BDD507C6C9B1F83357731D7DB10F408E7BC4A463B34D30E3A39ED77A69BC25F702269C1DC85E7768EC6AF6DD13B43938F91033D353DF065B37D0D41BE45C36D40E00F271012523DB5978CB18FA33FC105599B4BE8C497EC3038FD100BADA5AFFD256174254224308005D3265D779695EE9968D8F983B2F6E13D46BF30514DAD6B32E9ADBB2F724FD1684CF8755737EF27F6C21A18F17A186F19468DD0E32943D6FD9D62152BA608D8CBE18ADCEF50BA2FE71E505955A026632CA07992DFDAF05327666BBFEE0425A54145C475673CDF393F8159DA302AA7ADF537DCD5E01D960415AF19382A7F523EB9A6C972541E14241E6A8F3A58D28B185B44048041CC6E42736FC2A7C3989766F3B4425CF125D850A7A834C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /R put
dup 34 /o put
dup 35 /b put
dup 36 /S put
dup 37 /k put
dup 38 /a put
dup 39 /t put
dup 40 /e put
dup 41 /space put
dup 42 /G put
dup 43 /m put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<




000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/space 1 def
/G 2 def
/R 3 def
/S 4 def
/a 5 def
/b 6 def
/e 7 def
/k 8 def
/m 9 def
/o 10 def
/t 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282926D3FF702EB90048E65ACBE0D326788ABAA74A26601B9C1AD4664CDC82F068E11F9FFD66084483D1823B83A9E1077D8D63FDC25839B705F25E828C2677CC9CAAECB936421E936502615DD00AA5A848C29662CD21C71CECA69B367B81399A41C9085CA23ABBB0B3A1138EA6A6FA3A6594D0B37A1DE2C6A6D5F1AA856346FCB9FFB45A97323CB9F45BDA742064149AAF2DA6BF269001A7B6B1A35589D736CACA66FB5087BB0831146C103298BD92AFEE21EF376A725859978DBD861AA4AEB97842AE50F72F3D35D1F78B207568BB356C4BCEACA539E215FCE8C643297F06ACFC3E8D70BBF0705EE6A46F39848304DBF2E1476F2FF0BCDDD6E13942F5FD9D93D5E44FFB81AB2C2AEB7544EC031451CC1DAFE6AED6526359D5BB8A980DE0A5172F078696A1FF864DD1D406D18CCC48D2C0A0987DCC411C9442D4BBC1D1034B898BEB4D1AB6495E0C6F3C359EA05DF08744A528DD97141D71436248869188CADF5B4CF09D57899FE4CA986159D4216C75964803682AEEE0CDE00A6060BE14DB49A77FDC274EAF59BD3AD24608AE5D15D2DADD7EF87B29CF4A548E6870E0410BB01ACBD62B52CF21131690B24683B8576C6D21B27B2D2EAEF8DD05D65F00B443AD8C034AAA82A65358F20B9DA5AF2D51A980D20BBC417A8B9323FEC28838C2F956292AB457754DF25C6A580A449C76A4F9BF4CE8341A8DF9E8D17384D1505440110CBC9DDE5BDBBB9B368B04FCF8D6714C5C96EB61FFB69A22E6066F0DB6D60E874CE6DD045

ED472928C9CADB1A2328D397E2B83A89E8A33778D2A86F5B22E9429993195E049F3773ABD91948ABCB69E8BBC59D655C98591120581060DFDC63DDA6E080F713CF59E4F061C13E194671E2A9217A55A35654D71D31AA24D9A0613FC14E6549CD3B7B29D090107F3AE643F4A89C54B06E0B4FADDAB19273EF8E70866B7F8433C2F51FC94C160A251AF429F9DABF3C7EB4A0E5C6D760B8E2AC5ECC890C9BD9F9D664B6CF1D83E59A5E5849FC7E8C88354E369E12604699EAEC9204412407A677A89B65EA56AC097C9C3A28F92DC2A03AE68666A8778929ACA505EC08A6BE6734B6238DCF3E49AB9280905C96D9A973BDA310D0D0F3B383D33D57BF87C52E014CD4F9EFC5B1127089F88144FD57FDAE5B185DFB27CC198B402E911D005E73D0C1DFF4DEB83E64E5E1FF70383EE2FFCA6426AB986A7A44B577CC50FB01B43A3661CA98901656A9E4C7E27182B1D239BF4F681D06EAEA1E8387B5F1E5D4605A799E62778D254D65C2C5AB195DD49847BBF2504239092BAD99A2409D343408F2A2988D1EC19531AB48CFFDA5A8AC90628004CF9877E7F6C7F6EDE9399A70EFCD672C951BAE225C99D21E10679DE8D01AAB76E73B3E024C4B691CEC822374FD98E650B0557F110EDB93D5A93B4134DA25FDE8A144F850083FFC91ED6A16D43CDD72C468086C83000060B44221BEB29C83CBB6F037F909357A600624AA872BA6C61F371439653C009AF381468F0B0CBDB6DE6C2635DA1E327F30983AF1935C719C1EB7681CB354F374AD1937005B80FDF9D052EEEA0D329DC8D141F9DA5D855B2F65D8F87EA060187C567B633715D19FE365D67CDD800270DF4DEB4283278A03A349E514E52891994BAA4CAB1413F1BC8D7613667799E87B4B04B536BF1E6780106F898550693297EED323D6768E028F6F4F78C3051375E185359011347EFBB5621708CA998F5535F8733C2B80C1DCC9FA8B0B22EB44184346FD4B3E3D1A0EE00B07EB11B2A0813C2927A728877CDEBEF00A2638B2C2A01FC96BBA52000FA0B1F5247E316E726C4E64238558345D320631DD3EA20FF11277AA2C3B13747AE272FBE1FB44E0B640207A4D7AC34DD9377777871169106D549AF0418F9F1ACDBD25679CB232A7FCF487DF9016598B89317BB50E9A14746F790711EC9F89E2886AD0A51AF30AE105FEE1644173ECCB3A2EC59B849B0C117E7EB6B783F4F1A26CD9C3B859AF80A3CC121DC7A57178227B6C9B6E9BE68B0929D1349AC8F669DE8C1EFBE35BC366518F97813D88D523492AE13C261105788DE8C295795BE2798FE0EC62EE591D9E93BB36ECE0203C696FDE6F89E7CA19482CD5B9E7DD0243D395E3D5CE0E791E0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 877 256 rc
-34 290 m
1049 290 l
1049 -745 l
-34 -745 l
h
-34 290 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -34 290 cm
355 45 m
549 45 l
549 75 l
355 75 l
h
355 45 m
S
0 i
1 0 0 -1 418 230 cm
/F1.1[ 16 0 0 -16 0 0]sf
-61.183998 5.776001 m
(!"#$%&"'"\($&#\)$*&)[ 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 4.448000 8.592000 8.288000 5.040000 5.328000 8.592000 8.592000 5.040000 9.184000 0.000000 ] xS
0.60000002 i
1 0 0 -1 -34 290 cm
652 153.5 m
765 153.5 l
765 183.5 l
652 183.5 l
h
652 153.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 674.5 121.5 cm
-40.448002 5.776001 m
(+,-'-*./\)0)[ 13.936000 8.896000 10.368000 4.448000 10.368000 9.184000 3.552000 3.552000 8.592000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
225 171 m
270 171 l
306 171 l
306 84 l
306 60 l
345.10001 60 l
S
0 i
CM
319.10001 230 m
311.10001 233 l
311.10001 227 l
h
319.10001 230 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
353.10001 60 m
345.10001 57 l
345.10001 63 l
h
353.10001 60 m
S
1 J
1 j
0.60000002 i
225 222 m
360 222 l
360 198.5 l
360 168.5 l
642.09998 168.5 l
S
0 i
CM
616.09998 121.5 m
608.09998 124.5 l
608.09998 118.5 l
h
616.09998 121.5 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
650.09998 168.5 m
642.09998 165.5 l
642.09998 171.5 l
h
650.09998 168.5 m
S
1 J
1 j
0.60000002 i
708.5 183.5 m
708.5 261.5 l
477 261.5 l
234.89999 261.5 l
S
0 i
CM
192.89999 28.5 m
200.89999 25.5 l
200.89999 31.5 l
h
192.89999 28.5 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
226.89999 261.5 m
234.89999 264.5 l
234.89999 258.5 l
h
226.89999 261.5 m
S
1 1 1 sc
CM
225.5 191.5163 m
318.5 191.5163 l
318.5 161.5163 l
225.5 161.5163 l
h
225.5 191.5163 m
f
/Cs2 SC
0 sc
1 0 0 -1 272 176.5163 cm
-41.335999 5.776001 m
(123'45#6")[ 10.960000 12.144000 10.960000 4.448000 4.144000 13.648000 8.592000 9.184000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
388.55954 163.5 m
529.55951 163.5 l
529.55951 79.5 l
388.55954 79.5 l
h
388.55954 163.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 459.05954 121.5 cm
-65.5 -21.895996 m
(7\('\)&#8"'#86.")[ 8.896000 8.288000 4.448000 8.592000 5.328000 8.592000 8.896000 8.592000 4.448000 8.592000 8.896000 9.184000 3.552000 0.000000 ] xS
-65.5 -3.447998 m
(7\('\)&#8"'9".*\)/$0)[ 8.896000 8.288000 4.448000 8.592000 5.328000 8.592000 8.896000 8.592000 4.448000 8.000000 8.592000 3.552000 9.184000 8.592000 3.552000 5.040000 0.000000 ] xS
-65.5 15 m
(:\(';*#&<'9".*\)/$0)[ 8.896000 8.288000 4.448000 9.488000 9.184000 8.592000 5.040000 9.488000 4.448000 8.000000 8.592000 3.552000 9.184000 8.592000 3.552000 5.040000 0.000000 ] xS
-65.5 33.447998 m
(=\(';*#&<'>/$\)?@&*..)[ 8.896000 8.288000 4.448000 9.488000 9.184000 8.592000 5.040000 9.488000 4.448000 9.488000 3.552000 5.040000 8.592000 8.896000 5.328000 5.040000 9.184000 3.552000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
397.68466 43.5 m
599.68469 43.5 l
599.68469 13.5 l
397.68466 13.5 l
h
397.68466 43.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 498.68466 28.5 cm
-95.568001 5.776001 m
(7\(';*#&<'\)&#8"'A*/8$'B*&\)"C)[ 8.896000 8.288000 4.448000 9.488000 9.184000 8.592000 5.040000 9.488000 4.448000 8.592000 5.328000 8.592000 8.896000 8.592000 4.448000 3.552000 9.184000 3.552000 8.896000 5.040000 4.448000 4.736000 9.184000 5.040000 8.592000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
36 36 m
243 36 l
243 288 l
36 288 l
h
36 36 m
S
45 151 m
225 151 l
225 198 l
45 198 l
h
45 151 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 101 115.5 cm
-63.863998 -3.447998 m
(1*;*DE#$"'/5#6"')[ 10.960000 9.184000 9.488000 9.184000 10.368000 8.304000 8.592000 5.040000 8.592000 4.448000 3.552000 13.648000 8.592000 9.184000 8.592000 0.000000 ] xS
-45.928001 15 m
(*;C"&9#$/*8C)[ 9.184000 9.488000 8.000000 8.592000 5.328000 8.000000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
45 207 m
225 207 l
225 237 l
45 237 l
h
45 207 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 101 68 cm
-82.975998 5.776001 m
(8%5"&/\)#.'*;C"&9#$/*8C)[ 8.896000 8.896000 13.648000 8.592000 5.328000 3.552000 8.592000 8.592000 3.552000 4.448000 9.184000 9.488000 8.000000 8.592000 5.328000 8.000000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
Q
0.60000002 i
/Cs3 SC
1 1 1 sc
T soprm
q
65.140038 146.08357 94.219925 62.859745 rc
131.79568 193.79597 m
128.13586 191.49309 123.30267 192.59401 121.00111 196.25539 c
118.69888 199.91678 119.79966 204.75169 123.45914 207.05492 c
127.1193 209.35779 131.95215 208.25653 134.25404 204.59515 c
136.55595 200.93376 135.45515 196.09885 131.79568 193.79597 c
f
4 w
0 0 0 sc
T setstrokeadjust
0.34239131 0 0 0.34253752 131.79568 193.79597 cm
0 0 m
-10.689 -6.723 -24.805 -3.5090001 -31.527 7.1799998 c
-38.250999 17.868999 -35.035999 31.983999 -24.348 38.708 c
-13.658 45.431 0.45699999 42.216 7.1799998 31.527 c
13.903 20.837999 10.688 6.723 0 0 c
h
S
0.34239131 0 0 0.34253752 106.08791 162.32283 cm
0 0 m
-11.386 -7.1620002 -26.422001 -3.737 -33.584 7.6490002 c
-40.745998 19.035 -37.320999 34.070999 -25.936001 41.233002 c
-14.549 48.395 0.48699999 44.971001 7.6490002 33.584 c
14.811 22.198 11.387 7.1620002 0 0 c
h
S
1 1 1 sc
CM
155.57384 162.71457 m
152.47417 160.76381 148.38087 161.69655 146.43095 164.79788 c
144.48138 167.89886 145.41338 171.99391 148.51338 173.94466 c
151.61339 175.89507 155.70668 174.96234 157.65625 171.86134 c
159.60583 168.76035 158.67384 164.66498 155.57384 162.71457 c
f
0 0 0 sc
0.34239131 0 0 0.34253752 155.57384 162.71457 cm
0 0 m
-9.0530005 -5.6950002 -21.007999 -2.9719999 -26.702999 6.0819998 c
-32.396999 15.135 -29.674999 27.09 -20.621 32.785 c
-11.567 38.479 0.38800001 35.756001 6.0819998 26.702999 c
11.776 17.65 9.0539999 5.6939998 0 0 c
h
S
0.97600001 0.53299999 0.071000002 sc
CM
80.195564 154.3893 m
84.638779 154.3893 73.355957 154.3893 69.291084 155.14561 c
65.544983 155.84302 65.058105 158.13358 65.745628 159.0639 c
66.433144 159.99458 71.019135 158.92175 73.833595 158.58846 c
76.809662 158.23564 78.074112 157.78795 83.939613 157.976 c
84.044044 158.77548 84.38472 161.37227 84.38472 161.37227 c
91.109634 161.37227 l
92.188164 164.19717 l
110.99435 164.19717 l
112.07323 161.37227 l
118.79779 161.37227 l
118.79779 161.37227 119.13847 158.77548 119.24324 157.976 c
125.10874 157.78795 126.37286 158.23564 129.34926 158.58846 c
132.16338 158.92175 136.74971 159.99458 137.43723 159.0639 c
138.1244 158.13358 137.63786 155.84302 133.89142 155.14561 c
129.82655 154.3893 118.54408 154.3893 122.98729 154.3893 c
h
f
2 w
0 0 0 sc
0.34239131 0 0 0.34253752 80.195564 154.3893 cm
0 0 m
12.977 0 -19.976 0 -31.848 2.2079999 c
-42.789001 4.244 -44.210999 10.931 -42.202999 13.647 c
-40.195 16.364 -26.801001 13.232 -18.580999 12.259 c
-9.8889999 11.229 -6.1960001 9.9219999 10.935 10.471 c
11.24 12.805 12.235 20.386 12.235 20.386 c
31.875999 20.386 l
35.026001 28.632999 l
89.952003 28.632999 l
93.102997 20.386 l
112.743 20.386 l
112.743 20.386 113.738 12.805 114.044 10.471 c
131.175 9.9219999 134.867 11.229 143.56 12.259 c
151.77901 13.232 165.174 16.364 167.18201 13.647 c
169.189 10.931 167.76801 4.244 156.826 2.2079999 c
144.95399 0 112.002 0 124.979 0 c
0 0 l
h
S
1 1 1 sc
CM
84.384857 150.21527 m
84.384857 148.12271 82.689339 146.42612 80.597328 146.42612 c
78.505318 146.42612 76.809792 148.12271 76.809792 150.21527 c
76.809792 152.30783 78.505318 154.00441 80.597328 154.00441 c
82.689339 154.00441 84.384857 152.30783 84.384857 150.21527 c
f
0 0 0 sc
0.34239131 0 0 0.34253752 84.384857 150.21527 cm
0 0 m
0 -6.1090002 -4.9520001 -11.062 -11.062 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.062 -11.062 11.062 c
-4.9520001 11.062 0 6.1090002 0 0 c
h
S
CM
81.4431 150.21527 m
81.4431 149.74805 81.064758 149.3692 80.597397 149.3692 c
80.130035 149.3692 79.751686 149.74805 79.751686 150.21527 c
79.751686 150.6825 80.130035 151.06134 80.597397 151.06134 c
81.064758 151.06134 81.4431 150.6825 81.4431 150.21527 c
f
1 1 1 sc
127.28909 150.21527 m
127.28909 148.12271 125.59323 146.42612 123.50122 146.42612 c
121.40955 146.42612 119.71403 148.12271 119.71403 150.21527 c
119.71403 152.30783 121.40955 154.00441 123.50122 154.00441 c
125.59323 154.00441 127.28909 152.30783 127.28909 150.21527 c
f
0 0 0 sc
0.34239131 0 0 0.34253752 127.28909 150.21527 cm
0 0 m
0 -6.1090002 -4.9530001 -11.062 -11.063 -11.062 c
-17.172001 -11.062 -22.124001 -6.1090002 -22.124001 0 c
-22.124001 6.1090002 -17.172001 11.062 -11.063 11.062 c
-4.9530001 11.062 0 6.1090002 0 0 c
h
S
CM
124.34734 150.21527 m
124.34734 149.74805 123.96865 149.3692 123.50129 149.3692 c
123.03426 149.3692 122.65592 149.74805 122.65592 150.21527 c
122.65592 150.6825 123.03426 151.06134 123.50129 151.06134 c
123.96865 151.06134 124.34734 150.6825 124.34734 150.21527 c
f
0.97600001 0.53299999 0.071000002 sc
124.02264 203.61398 m
98.017685 172.3797 l
105.24864 166.35448 l
131.2536 197.58841 l
h
f
0 0 0 sc
0.34239131 0 0 0.34253752 124.02264 203.61398 cm
0 0 m
-75.950996 -91.184998 l
-54.832001 -108.775 l
21.118999 -17.591 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
141.67754 173.8609 m
146.42137 167.25473 l
154.55968 173.10356 l
149.81584 179.71008 l
147.38452 179.80016 l
130.03247 203.96413 l
125.01609 200.35892 l
142.36815 176.19461 l
h
f
0 0 0 sc
0.34239131 0 0 0.34253752 141.67754 173.8609 cm
0 0 m
13.855 -19.285999 l
37.624001 -2.211 l
23.768999 17.076 l
16.667999 17.339001 l
-34.011002 87.883003 l
-48.661999 77.358002 l
2.017 6.8130002 l
0 0 l
h
S
0.97600001 0.53299999 0.071000002 sc
CM
131.79568 193.79597 m
128.13586 191.49309 123.30267 192.59401 121.00111 196.25539 c
118.69888 199.91678 119.79966 204.75169 123.45914 207.05492 c
127.1193 209.35779 131.95215 208.25653 134.25404 204.59515 c
136.55595 200.93376 135.45515 196.09885 131.79568 193.79597 c
f
0.98000002 0.98000002 0.97600001 sc
130.88451 195.2449 m
128.02452 193.44556 124.24794 194.30602 122.44901 197.16689 c
120.65044 200.02809 121.51052 203.80629 124.37051 205.60597 c
127.23017 207.40533 131.00674 206.54488 132.80566 203.68401 c
134.60425 200.82278 133.74451 197.0446 130.88451 195.2449 c
f
0.97600001 0.53299999 0.071000002 sc
129.71925 197.09859 m
127.88266 195.94286 125.45716 196.49538 124.30228 198.33275 c
123.14705 200.17012 123.69933 202.59665 125.53557 203.75237 c
127.3725 204.90775 129.79765 204.35524 130.95288 202.51787 c
132.10811 200.68083 131.5555 198.2543 129.71925 197.09859 c
f
106.12736 162.26012 m
102.22889 159.80687 97.080696 160.98006 94.628487 164.88019 c
92.176285 168.78032 93.348976 173.93071 97.247101 176.38397 c
101.1459 178.83722 106.29411 177.66437 108.74596 173.7639 c
111.19852 169.86377 110.02617 164.71338 106.12736 162.26012 c
f
0.98000002 0.98000002 0.97600001 sc
104.57958 164.72177 m
102.04006 163.12383 98.68634 163.88768 97.089081 166.42828 c
95.491829 168.96922 96.255363 172.32439 98.794876 173.92232 c
101.3344 175.52026 104.68812 174.75606 106.28537 172.21545 c
107.88297 169.67485 107.11909 166.32004 104.57958 164.72177 c
f
0.97600001 0.53299999 0.071000002 sc
103.34142 166.69136 m
101.889 165.77747 99.971268 166.2142 99.057762 167.66725 c
98.144264 169.12029 98.581154 171.03883 100.03324 171.95273 c
101.48566 172.86662 103.40374 172.42955 104.31724 170.97684 c
105.23074 169.5238 104.7935 167.60524 103.34142 166.69136 c
f
1 1 1 sc
155.57384 162.71457 m
152.47417 160.76381 148.38087 161.69655 146.43095 164.79788 c
144.48138 167.89886 145.41338 171.99391 148.51338 173.94466 c
151.61339 175.89507 155.70668 174.96234 157.65625 171.86134 c
159.60583 168.76035 158.67384 164.66498 155.57384 162.71457 c
f
Q
/Cs2 SC
0 sc
0 i
F soprm
q
0 0 877 256 rc
1 0 0 -1 107 239 cm
/F2.1[ 16 0 0 -16 0 0]sf
-66.952003 6.2679443 m
(!"#"$%&'\(\)*&+\()[ 11.552000 9.776000 9.776000 9.776000 10.384000 9.184000 9.184000 5.632000 9.184000 4.448000 12.144000 9.184000 14.496000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
45 249 m
225 249 l
225 279 l
45 279 l
h
45 249 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 101 26 cm
/F1.1[ 16 0 0 -16 0 0]sf
-50.080002 5.776001 m
(1*;*$'#\)$/*8C)[ 10.960000 9.184000 9.488000 9.184000 5.040000 4.448000 8.592000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
549 54.5 m
708.5 54.5 l
708.5 143.60001 l
S
0 i
CM
674.5 138.39999 m
677.5 146.39999 l
671.5 146.39999 l
h
674.5 138.39999 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
708.5 151.60001 m
711.5 143.60001 l
705.5 143.60001 l
h
708.5 151.60001 m
S
1 1 1 sc
CM
551.97375 250.5 m
654.97375 250.5 l
654.97375 220.5 l
551.97375 220.5 l
h
551.97375 250.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 603.47375 235.5 cm
-46.383999 5.776001 m
(,#$"8$'C>#\)")[ 8.896000 8.592000 5.040000 8.592000 8.896000 5.040000 4.448000 8.000000 9.488000 8.592000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
796 108 m
909 108 l
909 155 l
796 155 l
h
796 108 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 818.5 158.5 cm
-27.4 -3.447998 m
(1"F#&<')[ 10.960000 8.592000 12.128000 8.592000 5.040000 9.488000 0.000000 ] xS
-38.52 15 m
(\)#.\)%.#$/*8)[ 8.592000 8.592000 3.552000 8.592000 8.896000 3.552000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -34 290 cm
225 225.5 m
703 225.5 l
703 220 714 220 714 225.5 c
852.5 225.5 l
852.5 164.89999 l
S
0 i
CM
818.5 133.10001 m
815.5 125.1 l
821.5 125.1 l
h
818.5 133.10001 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
852.5 156.89999 m
849.5 164.89999 l
855.5 164.89999 l
h
852.5 156.89999 m
S
1 J
1 j
0.60000002 i
796 131.5 m
780.5 131.5 l
780.5 150 l
780.5 168.5 l
774.90002 168.5 l
S
0 i
CM
732.90002 121.5 m
740.90002 118.5 l
740.90002 124.5 l
h
732.90002 121.5 m
f
0 J
0 j
1 0 0 -1 -34 290 cm
766.90002 168.5 m
774.90002 171.5 l
774.90002 165.5 l
h
766.90002 168.5 m
S
1 1 1 sc
CM
696.15015 97.5 m
857.15015 97.5 l
857.15015 31.5 l
696.15015 31.5 l
h
696.15015 97.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 776.65015 64.5 cm
-75.5 -12.671997 m
(48'F*&.<'\)**&</8#$"CG)[ 4.144000 8.896000 4.448000 12.128000 9.184000 5.328000 3.552000 9.488000 4.448000 8.592000 9.184000 9.184000 5.040000 9.488000 3.552000 8.896000 8.592000 5.040000 8.592000 8.000000 0.000000 ] xS
-75.5 5.776001 m
(H'>*C/$/*8'I@J)[ 6.224000 4.448000 9.488000 9.184000 8.000000 3.552000 5.040000 3.552000 9.184000 8.896000 4.448000 9.776000 5.328000 0.000000 ] xS
-75.5 24.223999 m
(H';*#&<'0#F)[ 6.224000 4.448000 9.488000 9.184000 8.592000 5.040000 9.488000 4.448000 8.000000 8.592000 0.000000 ] xS
ep
end
